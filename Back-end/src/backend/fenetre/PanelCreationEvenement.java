/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package backend.fenetre;

import java.awt.Color;
import java.io.File;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Aro
 */
public class PanelCreationEvenement extends javax.swing.JPanel {

    MenuPrincipal menuPrincipal;

    public PanelCreationEvenement(MenuPrincipal menuPrincipal) {
        this.menuPrincipal = menuPrincipal;
        initComponents();
        initComponentsPerso();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        TFNomEvent = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TADescription = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        CBCategorie = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        TFDebut = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        TFFin = new javax.swing.JTextField();
        BCreer = new javax.swing.JButton();

        jLabel1.setText("Nom de l'évènement : ");

        TFNomEvent.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TFNomEventFocusLost(evt);
            }
        });

        TADescription.setColumns(20);
        TADescription.setRows(5);
        TADescription.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TADescriptionFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(TADescription);

        jLabel2.setText("Description : ");

        jLabel3.setText("Catégorie :");

        CBCategorie.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setText("Début :");

        TFDebut.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TFDebutFocusLost(evt);
            }
        });
        TFDebut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFDebutActionPerformed(evt);
            }
        });

        jLabel6.setText("Fin :");

        TFFin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TFFinFocusLost(evt);
            }
        });

        BCreer.setText("Créer un nouvel évènement");
        BCreer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCreerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(89, Short.MAX_VALUE)
                .addComponent(BCreer)
                .addContainerGap(88, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TFNomEvent))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CBCategorie, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TFDebut, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TFFin, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(TFNomEvent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(TFDebut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(TFFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(CBCategorie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(BCreer)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BCreerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCreerActionPerformed
        String item = (String) CBCategorie.getSelectedItem();
        String idCategorie = item.split(" ")[0];
        
        creerEvenement(searchSpecial(TFNomEvent.getText()), TFDebut.getText(), TFFin.getText(), searchSpecial(TADescription.getText()), idCategorie, "");
    }//GEN-LAST:event_BCreerActionPerformed

    private void TFDebutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFDebutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFDebutActionPerformed

    private void TFDebutFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TFDebutFocusLost
        if (checkDate(TFDebut.getText())) {
            TFDebut.setForeground(Color.green);
        } else {
            TFDebut.setForeground(Color.red);
        }
        toutBon();
    }//GEN-LAST:event_TFDebutFocusLost

    private void TFFinFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TFFinFocusLost
        if (checkDate(TFFin.getText())) {
            TFFin.setForeground(Color.green);
        } else {
            TFFin.setForeground(Color.red);
        }
        toutBon();
    }//GEN-LAST:event_TFFinFocusLost

    private void TFNomEventFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TFNomEventFocusLost
        toutBon();
    }//GEN-LAST:event_TFNomEventFocusLost

    private void TADescriptionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TADescriptionFocusLost
        toutBon();
    }//GEN-LAST:event_TADescriptionFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BCreer;
    private javax.swing.JComboBox<String> CBCategorie;
    private javax.swing.JTextArea TADescription;
    private javax.swing.JTextField TFDebut;
    private javax.swing.JTextField TFFin;
    private javax.swing.JTextField TFNomEvent;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void initComponentsPerso() {
        CBCategorie.setModel(menuPrincipal.lister("IdCatEvent", "NomCategorie", "CategorieEvenement", ""));
    }

    /**
     * Vérifie si la date est au bon format
     * @param dateString
     * @return 
     */
    private boolean checkDate(String dateString) {
        String dateFormat = "yyyy-MM-dd";
        SimpleDateFormat sdf = new SimpleDateFormat(dateFormat);
        sdf.setLenient(false);
        try {
            Date date = sdf.parse(dateString);
            return true;
        } catch (ParseException e) {
            return false;
        }
    }

    
    /**
     * Permet de chercher formater les chaines de caractères pour pouvoir les passer en paramètre de la requête insert
     * @param text
     * @return 
     */
    private String searchSpecial(String text) {
        StringBuilder sb = new StringBuilder(text);
        int index = text.indexOf('\'');
        while (index >= 0) {
            sb.insert(index, '\\');
            System.out.println("New string: " + sb.toString());
            index =sb.toString().indexOf('\'', index + 2);
        }
        
        return sb.toString();
    }

    
    /**
     * Rajoute l'evenement dans la base de donnée
     * @param nomEvenement
     * @param dateDebut
     * @param dateFin
     * @param description
     * @param categorie
     * @param background 
     */
    private void creerEvenement(String nomEvenement, String dateDebut, String dateFin, String description, String categorie, String background) {
        
        System.out.println(categorie);
        String sql = "INSERT INTO `Evenement` (`NomEvenement`, `DateDebut`, `DateFin`, `Description`, `Categorie`, `Bg`) VALUES ('" + nomEvenement + "', '" + dateDebut + "', '" + dateFin + "', '" + description + "', '" + categorie + "', '" + background + "')";
        PreparedStatement nomOrdre = menuPrincipal.connectPrepared(sql);
        try {
            nomOrdre.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(PanelCreationEvenement.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    
    /**
     * Active le bouton si les données sont correctes, le desactive sinon
     */
    private void toutBon() {
        BCreer.setEnabled(checkDate(TFDebut.getText()) && checkDate(TFFin.getText()) /*&& image.exists()*/ && !TADescription.getText().equals("") && !TFNomEvent.getText().equals(""));
    }
}
